{"version":3,"sources":["tags.js"],"names":["tagsInput","document","querySelector","tags","tagsDiv","tagsInputHidden","mostrarTags","textContent","forEach","tag","nuevaTag","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","e","target","remove","filter","value","toString","split","addEventListener","keyCode","trim","preventDefault"],"mappings":"CAAA,WACA,MAAAA,EAAAC,SAAAC,cAAA,eAGA,IAAAF,EACA,OAGA,IAAAG,EAAA,GACA,MAAAC,EAAAH,SAAAC,cAAA,SACAG,EAAAJ,SAAAC,cAAA,iBAiCA,SAAAI,IACAF,EAAAG,YAAA,GACAJ,EAAAK,QAAAC,IACA,MAAAC,EAAAT,SAAAU,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAH,YAAAE,EACAC,EAAAI,WAAAC,EACAX,EAAAY,YAAAN,KAGAO,IAGA,SAAAF,EAAAG,GACAA,EAAAC,OAAAC,SACAjB,EAAAA,EAAAkB,OAAAZ,GAAAA,IAAAS,EAAAC,OAAAZ,aACAU,IAGA,SAAAA,IACAZ,EAAAiB,MAAAnB,EAAAoB,WAlDA,KAAAlB,EAAAiB,QACAnB,EAAAE,EAAAiB,MAAAE,MAAA,KACAlB,KAIAN,EAAAyB,iBAAA,YAEA,SAAAP,GAEA,GAAA,KAAAA,EAAAQ,QAAA,CAEA,GAAA,KAAAR,EAAAC,OAAAG,MAAAK,QAAAT,EAAAC,OAAAG,MAAA,EACA,OAIAJ,EAAAU,iBAGAzB,EAAA,IAAAA,EAAAe,EAAAC,OAAAG,MAAAK,QAGA3B,EAAAsB,MAAA,GAGAhB,QAvCA","file":"bundle.js","sourcesContent":["(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    // Previene la ejecuci贸n del c贸digo si no encuentra el elemento de tags\r\n    if (!tagsInput) {\r\n        return;\r\n    }\r\n\r\n    let tags = [];\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    // Recupera Tags del input oculto\r\n    if (tagsInputHidden.value !== '') {\r\n        tags = tagsInputHidden.value.split(',');\r\n        mostrarTags();\r\n    }\r\n\r\n    // Escucha los cambios del input\r\n    tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n    function guardarTag(e) {\r\n        // Verifica si fue presionada la coma (,) con su Key Code 44\r\n        if (e.keyCode === 44) {\r\n            // Previene la ejecuci贸n del c贸digo si solo se ingresan espacios en blanco\r\n            if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                return;\r\n            }\r\n\r\n            // Previene que la coma (,) se ingrese al value del input\r\n            e.preventDefault();\r\n\r\n            // Crea una copia del array de tags y agrega la nueva tag\r\n            tags = [...tags, e.target.value.trim()];\r\n\r\n            // Limpia el Value del input\r\n            tagsInput.value = '';\r\n\r\n            // Actualiza el listado de tags\r\n            mostrarTags();\r\n        }\r\n    }\r\n\r\n    function mostrarTags() {\r\n        tagsDiv.textContent = '';\r\n        tags.forEach(tag => {\r\n            const nuevaTag = document.createElement('LI');\r\n            nuevaTag.classList.add('formulario__tag');\r\n            nuevaTag.textContent = tag;\r\n            nuevaTag.ondblclick = eliminarTag;\r\n            tagsDiv.appendChild(nuevaTag);\r\n        });\r\n\r\n        actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e) {\r\n        e.target.remove();\r\n        tags = tags.filter(tag => tag !== e.target.textContent);\r\n        actualizarInputHidden();\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n        tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n})();"]}